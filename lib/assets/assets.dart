// Generated by Flutter Assets

// ignore_for_file: unused_field, camel_case_types, non_constant_identifier_names, library_private_types_in_public_api

import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
        
class Assets extends StatelessWidget {
  final AssetsData assets;
  final Widget child;

  const Assets({
    super.key,
    required this.assets,
    required this.child,
  });

  static AssetsData of(BuildContext context) {
    final widget = context.dependOnInheritedWidgetOfExactType<_InheritedAssets>();
    return widget?.assets ?? AssetsData.light();
  }

  @override
  Widget build(BuildContext context) {
    return _InheritedAssets(
      assets: assets,
      child: child,
    );
  }
}

class _InheritedAssets extends InheritedWidget {
  final AssetsData assets;

  const _InheritedAssets({
    required this.assets,
    required super.child,
  });

  @override
  bool updateShouldNotify(covariant _InheritedAssets oldWidget) => assets != oldWidget.assets;
}

class AssetsData {
  static AssetsData? _light;
  static AssetsData? _dark;

  factory AssetsData.light() => _light ??= AssetsData._(brightness: Brightness.light);
  factory AssetsData.dark() => _dark ??= AssetsData._(brightness: Brightness.dark);
  factory AssetsData.brightness(Brightness brightness) => brightness == Brightness.light ? AssetsData.light() : AssetsData.dark();

  final Brightness _brightness;

  AssetsData._({
    required Brightness brightness,
  })  : _brightness = brightness,
        fonts = _assets_fonts_dart._(brightness: brightness),
        images = _assets_images_dart._(brightness: brightness);

  final _assets_fonts_dart fonts;
  final _assets_images_dart images;
}

class _assets_fonts_dart {
  final Brightness _brightness;

  _assets_fonts_dart._({
    required Brightness brightness,
  })  : _brightness = brightness;

  final Montserrat_Bold_ttf = 'assets/fonts/Montserrat-Bold.ttf';
  final Montserrat_Light_ttf = 'assets/fonts/Montserrat-Light.ttf';
  final Montserrat_Medium_ttf = 'assets/fonts/Montserrat-Medium.ttf';
  final Montserrat_Regular_ttf = 'assets/fonts/Montserrat-Regular.ttf';
  final Montserrat_SemiBold_ttf = 'assets/fonts/Montserrat-SemiBold.ttf';
}

class _assets_images_dart {
  final Brightness _brightness;

  _assets_images_dart._({
    required Brightness brightness,
  })  : _brightness = brightness;

  final change_lang_ic_svg = 'assets/images/change_lang_ic.svg';
  final contact_us_ic_svg = 'assets/images/contact_us_ic.svg';
  final hollow_circle_ic_svg = 'assets/images/hollow_circle_ic.svg';
  final invite_friends_ic_svg = 'assets/images/invite_friends_ic.svg';
  final left_arrow_ic_svg = 'assets/images/left_arrow_ic.svg';
  final logout_ic_svg = 'assets/images/logout_ic.svg';
  final onboarding_logo1_svg = 'assets/images/onboarding_logo1.svg';
  final onboarding_logo2_svg = 'assets/images/onboarding_logo2.svg';
  final onboarding_logo3_svg = 'assets/images/onboarding_logo3.svg';
  final onboarding_logo4_svg = 'assets/images/onboarding_logo4.svg';
  final photo_camera_svg = 'assets/images/photo-camera.svg';
  final right_arrow_ic_svg = 'assets/images/right_arrow_ic.svg';
  final right_arrow_settings_ic_svg = 'assets/images/right_arrow_settings_ic.svg';
  final solid_circle_ic_svg = 'assets/images/solid_circle_ic.svg';
  final splash_logo_png = 'assets/images/splash_logo.png';
}
